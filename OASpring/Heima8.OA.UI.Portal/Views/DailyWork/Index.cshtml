
@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layuiAdmin 网站用户</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link href="~/Content/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>

    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-form layui-card-header layuiadmin-card-header-auto">
                <div class="layui-form-item">
                    <div class="layui-inline layui-hide">
                        <label class="layui-form-label">ID</label>
                        <div class="layui-input-block">
                            <input type="text" name="id" placeholder="请输入" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">科室名称</label>
                        <div class="layui-input-block">
                            @*<input type="text" name="deptname" placeholder="请输入" autocomplete="off" class="layui-input">*@
                            @Html.DropDownList("sysdeptid", (SelectList)ViewData["sysDepts"],"请选择", htmlAttributes: new { @class = "layui-input-block", lay_search = "" })
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">问题描述</label>
                        <div class="layui-input-block">
                            <input type="text" name="workname" placeholder="请输入" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">处理方法</label>
                        <div class="layui-input-block">
                            <input type="text" name="workcontent" placeholder="请输入" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">处理人</label>
                        <div class="layui-input-block">
                            @*<input type="text" name="userinfo" placeholder="请输入" autocomplete="off" class="layui-input">*@
                            @Html.DropDownList("userinfoid", (SelectList)ViewData["userInfos"], "请选择", htmlAttributes: new { @class = "layui-input-block" })
                        </div>
                    </div>
                    <div class="layui-inline">
                        <button class="layui-btn layuiadmin-btn-useradmin" lay-submit lay-filter="LAY-user-front-search">
                            <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="layui-card-body">
                <div style="padding-bottom: 10px;">
                    <button class="layui-btn layuiadmin-btn-useradmin" data-type="batchdel">删除</button>
                    <button class="layui-btn layuiadmin-btn-useradmin" data-type="add">添加</button>
                </div>

                <table id="LAY-user-manage" lay-filter="LAY-user-manage"></table>
                <script type="text/html" id="imgTpl">
                    <img style="display: inline-block; width: 50%; height: 100%;" src={{ d.avatar }}>
                </script>
                <script type="text/html" id="table-useradmin">
                    <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>
                </script>
            </div>
        </div>
    </div>
    <script src="~/Content/layuiadmin/layui/layui.js"></script>
    <script>
          layui.config({
            base: '/Content/layuiadmin/' //静态资源所在路径
          }).extend({
            index: 'lib/index' //主入口模块
          }).use(['index', 'useradmin', 'table','layer','laytpl'], function(){
              var $ = layui.$
              , form = layui.form
              , table = layui.table;
            //初始化表格
            table.render({
                elem: '#LAY-user-manage'
              , url: "/DailyWork/GetAllDailyWorksWithSearchParam"
              , parseData: function(res) {
                  return {
                      "code": res.code,
                      "msg": res.msg,
                      "count": res.count,
                      "data":res.data
                  };
              }
              , toolbar: '#toolbarDemo' //开启头部工具栏，并为其绑定左侧模板
              , defaultToolbar: ['filter', 'exports', 'print', { //自定义头部工具栏右侧图标。如无需自定义，去除该参数即可
                  title: '提示'
                , layEvent: 'LAYTABLE_TIPS'
                , icon: 'layui-icon-tips'
              }]
              , title: '工作日志记录表'
              , cols: [[//u.Id, u.UName, u.Remark, u.ShowName, u.SubTime, u.ModifiedOn, u.Pwd
                  //绑定表格数据
                { type: 'checkbox', fixed: 'left' },
                { field: 'Id', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true }
                , { field: 'WorkName', title: '问题描述', width: 280, edit: 'text' }
                , { field: 'WorkContent', title: '处理方法', width: 140 }
                , { field: 'SqlLog', title: '处理语句', width: 280 }
                , { field: 'DeptName', title: '科室名称', width: 100 }
                , { field: 'UName', title: '处理人', width: 100 }
                , { field: 'Remark', title: '备注', width: 130 }
                , { field: 'SubTime', title: '提交时间', width: 220, templet: function (d) { return formatTime(d.SubTime); } }
                , { field: 'ModifiedOn', title: '修改时间', width: 220, templet: function (d) { return formatTime(d.ModifiedOn); } }
                , { fixed: 'right', title: '操作', toolbar: '#table-useradmin', width: 150 }
              ]], done: function (data) {
                  console.log(data);
              }
              , page: true
            });

            Date.prototype.format = function (format) //author: meizz
            {
                var o = {
                    "M+": this.getMonth() + 1, //month
                    "d+": this.getDate(),    //day
                    "h+": this.getHours(),   //hour
                    "m+": this.getMinutes(), //minute
                    "s+": this.getSeconds(), //second
                    "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter
                    "S": this.getMilliseconds() //millisecond
                }
                if (/(y+)/.test(format)) format = format.replace(RegExp.$1,
                (this.getFullYear() + "").substr(4 - RegExp.$1.length));
                for (var k in o) if (new RegExp("(" + k + ")").test(format))
                    format = format.replace(RegExp.$1,
                  RegExp.$1.length == 1 ? o[k] :
                    ("00" + o[k]).substr(("" + o[k]).length));
                return format;
            }

            function formatTime(val) {
                var re = /-?\d+/;
                var m = re.exec(val);
                var d = new Date(parseInt(m[0]));
                // 按【2012-02-13 09:09:09】的格式返回日期
                return d.format("yyyy-MM-dd hh:mm:ss");
            }

            function formatDate(val) {
                var re = /-?\d+/;
                var m = re.exec(val);
                var d = new Date(parseInt(m[0]));
                // 按【2012-02-13】的格式返回日期
                return d.format("yyyy-MM-dd");
            }


            //监听工具条
              table.on('tool(LAY-user-manage)', function (obj) {
                var data = obj.data;//获得当前行数据
                var layEvent = obj.event;//获得lay-event对应的值
                var tr = obj.tr;//获得当前行tr的DOM对象

                if (layEvent === 'edit') {//编辑
                    //alert('编辑');
                    layer.open({
                            type: 2
                      ,title: '修改日志'
                      , content: '/DailyWork/EditById/' + data['Id']
                      ,maxmin: true
                      , area: ['700px', '850px']
                      ,btn: ['确定', '取消']
                      ,yes: function(index, layero){
                            var iframeWindow = window['layui-layer-iframe'+ index]
                            ,submitID = 'LAY-user-front-submit'
                            , submit = layero.find('iframe').contents().find('#' + submitID);


                          //监听提交
                            iframeWindow.layui.form.on('submit('+ submitID +')', function(data){
                                //获取提交的字段
                                var field = data.field;
                                //ajax向后台提交填写的数据
                                $.ajax({
                                    url: "@Url.Action("Edit", "DailyWork")"
                                       , method: 'POST'
                                       , data: data.field
                                       , dataType: 'html'
                                       , success: function (ret) {
                                           console.log(ret);
                                           //返回成功则刷新table
                                           if (ret == "success") {
                                               table.reload('LAY-user-manage');
                                           } else {
                                               layer.msg('添加失败');
                                           }
                                       }
                            });
                            layer.close(index); //关闭弹层
                        });
                        submit.trigger('click');
                    }
                  });

                } else if (layEvent === 'del') {
                    //删除
                    //弹出是否删除提示框
                    layer.confirm('是否确认删除',
                        { icon: 3, title: '提示' },
                        function (index, layero) {
                            //当确认是删除时调用删除接口
                            $.post("/DailyWork/Delete", { ids: data['Id'] }, function (ret) {
                                if (ret == "ok") {
                                    //调用界面记录刷新
                                    obj.del();
                                    //关闭删除对话框
                                    layer.close(index);
                                    //执行重载
                                    //table.reload('LAY-user-manage');
                                } else {
                                    layer.msg("删除失败");
                                }
                            });

                    });



                }
            });

            //监听搜索
            form.on('submit(LAY-user-front-search)', function(data){
              var field = data.field;

              //执行重载
              table.reload('LAY-user-manage', {
                where: field
              });
            });

            //事件
            var active = {
              batchdel: function(){
                var checkStatus = table.checkStatus('LAY-user-manage')
                ,checkData = checkStatus.data; //得到选中的数据
                //判断是否选中数据
                if(checkData.length === 0){
                  return layer.msg('请选择数据');
                }
                //将选中数据的json对象转化为javascript数组对象
                var checkObjs = checkData.map(item => { return Object.values(item) });
                //定义接受Id的字符串
                var checkIds = '';
                //遍历数组对象
                for (var i = 0; i < checkObjs.length; i++) {
                    //拼接选中行的Id得到要删除的行的Id字符串
                    checkIds += checkObjs[i][0] + ',';
                }
                //去掉字符串末尾的逗号
                checkIds = checkIds.substr(0, checkIds.length - 1);
                alert(checkIds);
                //发送异步请求至后台
                $.post("/DailyWork/Delete", { ids: checkIds }, function (data) {
                    if (data == "ok") {
                        //执行重载
                        table.reload('LAY-user-manage');
                    } else {
                        layer.msg("删除失败");
                    }
                });
              }
              ,add: function(){
                layer.open({
                  type: 2
                  ,title: '日志录入'
                  , content: "@Url.Action("Create", "DailyWork")"
                  ,maxmin: true
                  ,area: ['700px', '850px']
                  ,btn: ['确定', '取消']
                  ,yes: function(index, layero){
                    var iframeWindow = window['layui-layer-iframe'+ index]
                    ,submitID = 'LAY-user-front-submit'
                    , submit = layero.find('iframe').contents().find('#' + submitID);

                    //监听提交
                    iframeWindow.layui.form.on('submit('+ submitID +')', function(data){
                       //获取提交的字段
                        var field = data.field;
                       //ajax向后台提交填写的数据
                       $.ajax({
                                url: "@Url.Action("Add", "DailyWork")"
                              , method: 'POST'
                              , data: data.field
                              , dataType: 'html'
                              , success: function (ret) {
                                  console.log(ret);
                                  //返回成功则刷新table
                                  if (ret == "success") {
                                      table.reload('LAY-user-manage');
                                  } else {
                                      layer.msg('添加失败');
                                  }
                          }
                        });
                        layer.close(index); //关闭弹层
                    });
                    submit.trigger('click');
                  }
                });
              }

            };

            $('.layui-btn.layuiadmin-btn-useradmin').on('click', function(){
              var type = $(this).data('type');
              active[type] ? active[type].call(this) : '';
            });
          });
    </script>
</body>
</html>
