<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ 
 output extension=".cs"#>

 <#
 
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this,1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\Heima8.OA.Model\\ContextModel.edmx";
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

//var textTransform = DynamicTextTransformation.Create(this);
//var code = new CodeGenerationTools(this);
//var ef = new MetadataTools(this);
//var typeMapper = new TypeMapper(code, ef, textTransform.Errors);
//var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
//var itemCollection = new EdmMetadataLoader(textTransform.Host, textTransform.Errors).CreateEdmItemCollection(inputFile);
//var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);
#>




//------------------------------------------------------------------------------
// <auto-generated>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine1")#>
//
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine2")#>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine3")#>
// </auto-generated>
//------------------------------------------------------------------------------

using Heima8.OA.EFDAL;
using Heima8.OA.IDAL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Heima8.OA.DALFactory
{
    public partial class DbSession:IDbSession
    {
		

		<#
		foreach (var entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
		{ 
		#>
		public I<#=entity.Name#>Dal <#=entity.Name#>Dal 
		{
			get { return StaticDalFactory.Get<#=entity.Name#>Dal(); }
		}
		<#}#>
	}
}






